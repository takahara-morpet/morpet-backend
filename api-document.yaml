openapi: "3.0.2"
info:
  title: "Sample API"
  version: "1.0.0"
servers:
  - url: http://localhost:8080/
paths:
  /users:
    post:
      summary: "Create user"
      operationId: "createUser"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                age:
                  type: integer
                  default: 20
                profile:
                  type: string
                profileImageUrl:
                  type: string
                gender:
                  type: string
                mbti:
                  type: string
      responses:
        "200":
          description: "User created"
        "400":
          description: "Invalid input"
    get:
      summary: "Get list of users"
      operationId: "getUsers"
      responses:
        "200":
          description: "A list of users"
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        age:
                          type: integer
                        profile:
                          type: string
                        profileImageUrl:
                          type: string
                        gender:
                          type: string
                        mbti:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
  /users/{userId}:
    get:
      summary: "Get user by ID"
      operationId: "getUserById"
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "User details"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  age:
                    type: integer
                  profile:
                    type: string
                  profileImageUrl:
                    type: string
                  gender:
                    type: string
                  mbti:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        "404":
          description: "User not found"
    put:
      summary: "Update user profile"
      operationId: "updateUser"
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                age:
                  type: integer
                profile:
                  type: string
                profileImageUrl:
                  type: string
                gender:
                  type: string
                mbti:
                  type: string
      responses:
        "200":
          description: "User updated"
        "400":
          description: "Invalid input"
        "404":
          description: "User not found"
  /posts:
      post:
        summary: "Create post"
        operationId: "createPost"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                  content:
                    type: string
                  category:
                    type: string
        responses:
          "200":
            description: "Post created"
          "400":
            description: "Invalid input"
      get:
        summary: "Get list of posts"
        operationId: "getPosts"
        responses:
          "200":
            description: "A list of posts"
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    posts:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          userId:
                            type: integer
                          content:
                            type: string
                          category:
                            type: string
                          createdAt:
                            type: string
                            format: date-time
                          updatedAt:
                            type: string
                            format: date-time
  /posts/{postId}:
    get:
      summary: "Get post details"
      operationId: "getPostDetails"
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "Post details"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  userId:
                    type: integer
                  content:
                    type: string
                  category:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        "404":
          description: "Post not found"
  /replys:
    post:
      summary: "Reply to a post"
      operationId: "createReply"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                senderId:
                  type: integer
                postId:
                  type: integer
                content:
                  type: string
      responses:
        "200":
          description: "Reply created"
        "400":
          description: "Invalid input"
    get:
      summary: "Get list of replies"
      operationId: "getReplies"
      responses:
        "200":
          description: "A list of replies"
          content:
            application/json:
              schema:
                type: object
                properties:
                  replies:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        senderId:
                          type: integer
                        postId:
                          type: integer
                        content:
                          type: string
                        sentAt:
                          type: string
                          format: date-time
